<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.warehouse.configs.models.mapper.StockDAO">
	<resultMap id="stockMap" type="org.warehouse.models.stock.TmstkVO">
		<result property="itemCd" column="ITEM_CD" />
		<result property="clntCd" column="CLNT_CD" />
		<result property="locCd" column="LOC_CD" />
		<result property="wactrCd" column="WACTR_CD" />
		<result property="stockAmt" column="STOCK_AMT" />
		<result property="faultAmt" column="FAULT_AMT" />
		<result property="stdinDt" column="STDIN_DT" />
		<result property="regDt" column="REG_DT" />
		<result property="regNm" column="REG_NM" />
		<result property="modDt" column="MOD_DT" />
		<result property="modNm" column="MOD_NM" />
		<result property="delYn" column="DEL_YN" />
	</resultMap>
	<resultMap id="stktransfMap" type="org.warehouse.models.stock.StktransfVO">
		<result property="moveDt" column="MOVE_DT" />
		<result property="no" column="NO" />
		<result property="itemCd" column="ITEM_CD" />
		<result property="itemNm" column="ITEM_NM" />
		<result property="clntCd" column="CLNT_CD" />
		<result property="waCtrCdFrom" column="WACTR_CD_FROM" />
		<result property="locCdFrom" column="LOC_CD_FROM" />
		<result property="waCtrCdTo" column="WACTR_CD_TO" />
		<result property="locCdTo" column="LOC_CD_TO" />
		<result property="runtimeStock" column="RUNTIME_STOCK" />
		<result property="moveAmt" column="MOVE_AMT" />
		<result property="reason" column="REASON" />
		<result property="regDt" column="REG_DT" />
		<result property="regNm" column="REG_NM" />
		<result property="modDt" column="MOD_DT" />
		<result property="modNm" column="MOD_NM" />
		<result property="delyn" column="DEL_YN" />
	</resultMap>

	<insert id="insertStdin" parameterType="org.warehouse.models.stdin.StdinVO">
		INSERT INTO TMSTK(ITEM_CD, CLNT_CD, LOC_CD, WACTR_CD, STOCK_AMT, FAULT_AMT, STDIN_DT, REG_DT, REG_NM)
			VALUES(#{itemCd}, #{clntCd}, #{locCd}, #{wactrCd}, #{beforeStdin}, #{fault}, #{stdinDt}, SYSDATE, #{regNm})
	</insert>

	<update id="updateStdin" parameterType="org.warehouse.models.stdin.StdinVO">
		UPDATE TMSTK SET
			STOCK_AMT = #{beforeStdin},
			FAULT_AMT = #{fault},
			STDIN_DT = #{stdinDt}
		WHERE WACTR_CD = #{wactrCd} AND CLNT_CD = #{clntCd} AND ITEM_CD = #{itemCd} AND LOC_CD = #{locCd}
	</update>

	<select id="tmstkList" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT T.*, W.WACTR_NM, C.CLNT_NM, I.ITEM_NM  FROM TMSTK T LEFT OUTER JOIN WACTR W ON T.WACTR_CD = W.WACTR_CD
			LEFT OUTER JOIN LOC L ON L.LOC_CD = T.LOC_CD
			LEFT OUTER JOIN CLNT C ON T.CLNT_CD = C.CLNT_CD
			LEFT OUTER JOIN ITEM I ON T.ITEM_CD = I.ITEM_CD
		WHERE L.WACTR_CD = W.WACTR_CD
		ORDER BY T.REG_DT DESC
	</select>

	<!-- 검색 조건 -->
	<select id="getSearchList" resultType="org.warehouse.models.stock.TmstkVO" parameterType="String">
		select w.wactr_nm , c.clnt_nm , l.loc_cd , i.item_cd , i.item_nm , t.* from tmstk t
		join wactr w on w.wactr_cd = t.wactr_cd
		join clnt c on c.clnt_cd = t.clnt_cd
		join loc l on l.loc_cd = t.loc_cd
		join item i on i.item_cd = t.item_cd
		where t.del_yn = 'N'
		<choose>
			<when test='search_clntNm != "" and search_itemCd == "" and search_itemNm == ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd != "" and search_itemNm == ""'>
				and i.item_cd like '%'||#{search_itemCd}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd == "" and search_itemNm != ""'>
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd != "" and search_itemNm == ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_cd like '%'||#{search_itemCd}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd == "" and search_itemNm != ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd != "" and search_itemNm != ""'>
				and i.item_cd like '%'||#{search_itemCd}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd != "" and search_itemNm != ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_cd like '%'||#{search_itemCd}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
		</choose>
		ORDER BY t.REG_DT DESC
	</select>
	<!-- 검색 조건 -->

	<select id="getTmstkByConditions" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT * FROM TMSTK
		WHERE WACTR_CD = #{wactrCd} AND CLNT_CD = #{clntCd} AND ITEM_CD = #{itemCd} AND LOC_CD = #{locCd}
	</select>

	<select id="getTmstkByLocCdItemCd" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT * FROM TMSTK
		WHERE ITEM_CD = #{itemCd} AND LOC_CD = #{locCd}
	</select>

	<insert id="insertTmstk" parameterType="org.warehouse.models.stock.TmstkVO">
		INSERT INTO TMSTK(ITEM_CD, CLNT_CD, LOC_CD, WACTR_CD, STOCK_AMT, FAULT_AMT, STDIN_DT, REG_DT, REG_NM)
			VALUES(#{item_cd}, #{clnt_cd}, #{loc_cd}, #{wactr_cd}, #{stock_amt}, #{fault_amt}, SYSDATE, SYSDATE, #{regNm})
	</insert>

	<update id="updateTmstk" parameterType="org.warehouse.models.stock.TmstkVO">
		UPDATE TMSTK SET STOCK_AMT = #{stock_amt}, MOD_NM = #{modNm}, MOD_DT = SYSDATE
		WHERE WACTR_CD = #{wactr_cd} AND CLNT_CD = #{clnt_cd} AND ITEM_CD = #{item_cd} AND LOC_CD = #{loc_cd}
	</update>

	<update id="deleteTmstk" parameterType="org.warehouse.models.stock.TmstkVO">
		UPDATE TMSTK SET DEL_YN = 'Y', MOD_DT = SYSDATE
		WHERE WACTR_CD = #{wactr_cd} AND CLNT_CD = #{clnt_cd} AND ITEM_CD = #{item_cd} AND LOC_CD = #{loc_cd}
	</update>

	<insert id="insertStktransf" parameterType="org.warehouse.models.stock.StktransfVO">
		INSERT INTO STKTRANSF F(F.MOVE_DT, F.NO, F.ITEM_CD, F.CLNT_CD, F.WACTR_CD_FROM, F.LOC_CD_FROM, F.WACTR_CD_TO, F.LOC_CD_TO, F.RUNTIME_STOCK, F.MOVE_AMT, F.REASON, F.REG_DT, F.REG_NM)
		VALUES(SYSDATE,(SELECT COUNT(*) FROM STKTRANSF FF WHERE FF.MOVE_DT = SYSDATE), #{itemCd}, #{clntCd}, #{waCtrCdFrom}, #{locCdFrom}, #{waCtrCdTo}, #{locCdTo}, #{runtimeStock}, #{moveAmt}, #{reason}, SYSDATE, #{regNm})

	</insert>

	<select id="getStktransfList" resultMap="stktransfMap">
		SELECT F.*, I.ITEM_NM FROM STKTRANSF F
			LEFT OUTER JOIN ITEM I ON F.ITEM_CD = I.ITEM_CD
		WHERE F.DEL_YN = 'N'
		ORDER BY F.MOVE_DT ASC
	</select>
</mapper>