<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.warehouse.configs.models.mapper.StockDAO">
	<resultMap id="stockMap" type="org.warehouse.models.stock.TmstkVO">
		<result property="itemCd" column="ITEM_CD" />
		<result property="clntCd" column="CLNT_CD" />
		<result property="locCd" column="LOC_CD" />
		<result property="wactrCd" column="WACTR_CD" />
		<result property="stockAmt" column="STOCK_AMT" />
		<result property="faultAmt" column="FAULT_AMT" />
		<result property="stdinDt" column="STDIN_DT" />
		<result property="regDt" column="REG_DT" />
		<result property="regNm" column="REG_NM" />
		<result property="modDt" column="MOD_DT" />
		<result property="modNm" column="MOD_NM" />
		<result property="delYn" column="DEL_YN" />
	</resultMap>
	<resultMap id="stktransfMap" type="org.warehouse.models.stock.StktransfVO">
		<result property="moveDt" column="MOVE_DT" />
		<result property="no" column="NO" />
		<result property="itemCd" column="ITEM_CD" />
		<result property="itemNm" column="ITEM_NM" />
		<result property="clntCd" column="CLNT_CD" />
		<result property="waCtrCdFrom" column="WACTR_CD_FROM" />
		<result property="locCdFrom" column="LOC_CD_FROM" />
		<result property="waCtrCdTo" column="WACTR_CD_TO" />
		<result property="locCdTo" column="LOC_CD_TO" />
		<result property="runtimeStock" column="RUNTIME_STOCK" />
		<result property="moveAmt" column="MOVE_AMT" />
		<result property="reason" column="REASON" />
		<result property="regDt" column="REG_DT" />
		<result property="regNm" column="REG_NM" />
		<result property="modDt" column="MOD_DT" />
		<result property="modNm" column="MOD_NM" />
		<result property="delyn" column="DEL_YN" />
	</resultMap>
	<resultMap id="stock2Map" type="org.warehouse.models.stock.TmstkVO">
		<result property="item_cd" column="ITEM_CD" />
		<result property="clnt_cd" column="CLNT_CD" />
		<result property="loc_cd" column="LOC_CD" />
		<result property="wactr_cd" column="WACTR_CD" />
		<result property="stock_amt" column="STOCK_AMT" />
		<result property="fault_amt" column="FAULT_AMT" />
		<result property="stdin_dt" column="STDIN_DT" />
		<result property="regDt" column="REG_DT" />
		<result property="regNm" column="REG_NM" />
		<result property="modDt" column="MOD_DT" />
		<result property="modNm" column="MOD_NM" />
		<result property="delYn" column="DEL_YN" />
	</resultMap>

	<!--	stdin S		-->
	<insert id="insertStdin" parameterType="org.warehouse.models.stdin.StdinVO">
		INSERT INTO TMSTK(ITEM_CD, CLNT_CD, LOC_CD, WACTR_CD, STOCK_AMT, FAULT_AMT, STDIN_DT, REG_DT, REG_NM)
			VALUES(#{itemCd}, #{clntCd}, #{locCd}, #{wactrCd}, #{beforeStdin}, #{fault}, #{stdinDt}, SYSDATE, #{regNm})
	</insert>

	<update id="updateStdin" parameterType="org.warehouse.models.stdin.StdinVO">
		UPDATE TMSTK SET
			STOCK_AMT = #{beforeStdin},
			FAULT_AMT = #{fault},
			STDIN_DT = #{stdinDt}
		WHERE WACTR_CD = #{wactrCd} AND CLNT_CD = #{clntCd} AND ITEM_CD = #{itemCd} AND LOC_CD = #{locCd}
	</update>
	<!--	stdin E		-->

	<!--	tmstk S		-->
	<select id="tmstkList" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT T.*, W.WACTR_NM, C.CLNT_NM, I.ITEM_NM  FROM TMSTK T LEFT OUTER JOIN WACTR W ON T.WACTR_CD = W.WACTR_CD
			LEFT OUTER JOIN LOC L ON L.LOC_CD = T.LOC_CD
			LEFT OUTER JOIN CLNT C ON T.CLNT_CD = C.CLNT_CD
			LEFT OUTER JOIN ITEM I ON T.ITEM_CD = I.ITEM_CD
		WHERE L.WACTR_CD = W.WACTR_CD AND T.DEL_YN = 'N'
		ORDER BY T.REG_DT DESC
	</select>

	<!-- 검색 조건 -->
	<select id="getSearchList" resultType="org.warehouse.models.stock.TmstkVO" parameterType="String">
		select w.wactr_nm , c.clnt_nm , l.loc_cd , i.item_cd , i.item_nm , t.* from tmstk t
		join wactr w on w.wactr_cd = t.wactr_cd
		join clnt c on c.clnt_cd = t.clnt_cd
		join loc l on l.loc_cd = t.loc_cd
		join item i on i.item_cd = t.item_cd
		where t.del_yn = 'N'
		<choose>
			<when test='search_clntNm != "" and search_itemCd == "" and search_itemNm == ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd != "" and search_itemNm == ""'>
				and i.item_cd like '%'||#{search_itemCd}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd == "" and search_itemNm != ""'>
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd != "" and search_itemNm == ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_cd like '%'||#{search_itemCd}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd == "" and search_itemNm != ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm == "" and search_itemCd != "" and search_itemNm != ""'>
				and i.item_cd like '%'||#{search_itemCd}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
			<when test='search_clntNm != "" and search_itemCd != "" and search_itemNm != ""'>
				and c.clnt_nm like '%'||#{search_clntNm}||'%'
				and i.item_cd like '%'||#{search_itemCd}||'%'
				and i.item_nm like '%'||#{search_itemNm}||'%'
			</when>
		</choose>
		AND l.WACTR_CD =w.WACTR_CD
		ORDER BY t.REG_DT DESC
	</select>
	<!-- 검색 조건 -->

	<select id="getTmstkByConditions" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT * FROM TMSTK
		WHERE WACTR_CD = #{wactrCd} AND CLNT_CD = #{clntCd} AND ITEM_CD = #{itemCd} AND LOC_CD = #{locCd} AND DEL_YN = 'N'
	</select>

	<select id="getTmstkByLocCdItemCd" resultType="org.warehouse.models.stock.TmstkVO">
		SELECT * FROM TMSTK
		WHERE ITEM_CD = #{itemCd} AND LOC_CD = #{locCd} AND DEL_YN = 'N'
	</select>

	<insert id="insertTmstk" parameterType="org.warehouse.models.stock.TmstkVO">
		INSERT INTO TMSTK(ITEM_CD, CLNT_CD, LOC_CD, WACTR_CD, STOCK_AMT, FAULT_AMT, STDIN_DT, REG_DT, REG_NM)
			VALUES(#{item_cd}, #{clnt_cd}, #{loc_cd}, #{wactr_cd}, #{stock_amt}, #{fault_amt}, TO_CHAR(SYSDATE, 'YYYY-MM-DD'), SYSDATE, #{regNm})
	</insert>

	<update id="updateTmstkAmt" parameterType="org.warehouse.models.stock.TmstkVO">
		UPDATE TMSTK SET STOCK_AMT = #{stock_amt}, FAULT_AMT = #{fault_amt}, MOD_NM = #{modNm}, MOD_DT = SYSDATE
		WHERE WACTR_CD = #{wactr_cd} AND CLNT_CD = #{clnt_cd} AND ITEM_CD = #{item_cd} AND LOC_CD = #{loc_cd}
	</update>

	<update id="updateTmstkDelyn" parameterType="org.warehouse.models.stock.TmstkVO">
		UPDATE TMSTK SET DEL_YN = 'N', STOCK_AMT = #{stock_amt}, FAULT_AMT = #{fault_amt}, STDIN_DT = TO_CHAR(SYSDATE, 'YYYY-MM-DD'), MOD_DT = SYSDATE, MOD_NM = #{regNm}
		WHERE WACTR_CD = #{wactr_cd} AND CLNT_CD = #{clnt_cd} AND ITEM_CD = #{item_cd} AND LOC_CD = #{loc_cd}
	</update>

	<update id="deleteTmstk" parameterType="org.warehouse.models.stock.TmstkVO">
		UPDATE TMSTK SET DEL_YN = 'Y', STOCK_AMT = #{stock_amt}, FAULT_AMT = #{fault_amt}
		WHERE WACTR_CD = #{wactr_cd} AND CLNT_CD = #{clnt_cd} AND ITEM_CD = #{item_cd} AND LOC_CD = #{loc_cd}
	</update>
	<!--	tmstk E		-->

	<!--	stkadj S	-->
	<!--재고조정 테이블을 위한 조인-->
	<select id="tmsktList" resultType="org.warehouse.models.stock.StkadjForm">
		SELECT
		t.ITEM_CD, i.ITEM_NM,
		t.CLNT_CD , c.CLNT_NM,
		t.WACTR_CD , w.WACTR_NM,
		t.LOC_CD ,
		t.STOCK_AMT,t.FAULT_AMT,
		t.reg_dt,t.del_yn,
		NVL(r.ALLO_AMT, 0) ALLO_AMT
		FROM TMSTK T
		LEFT JOIN RELS_S r ON r.ITEM_CD = t.ITEM_CD
		LEFT JOIN WACTR w ON w.WACTR_CD = t.WACTR_CD
		LEFT JOIN CLNT c ON c.CLNT_CD = t.CLNT_CD
		LEFT JOIN ITEM i ON i.ITEM_CD = t.ITEM_CD
		where T.del_yn = 'N'
		ORDER BY t.reg_dt DESC
	</select>

	<!--조정내역 리스트 -->
	<select id="stkadjList" resultType="org.warehouse.models.stock.StkadjForm">
		SELECT
		i.ITEM_NM,
		c.CLNT_NM,
		w.WACTR_NM,
		NVL(r.ALLO_AMT, 0) ALLO_AMT,
		s.*
		FROM stkadj s
		LEFT JOIN RELS_S r ON r.ITEM_CD = s.ITEM_CD
		LEFT JOIN WACTR w ON w.WACTR_CD = s.WACTR_CD
		LEFT JOIN CLNT c ON c.CLNT_CD = s.CLNT_CD
		LEFT JOIN ITEM i ON i.ITEM_CD = s.ITEM_CD
		where s.del_yn = 'N'
		ORDER BY s.adj_dt DESC
	</select>

	<!--검색조건-->
	<select id="search_tmstkList" resultType="org.warehouse.models.stock.StkadjForm" parameterType="String">
		SELECT
		t.ITEM_CD, i.ITEM_NM,
		t.CLNT_CD , c.CLNT_NM,
		t.WACTR_CD , w.WACTR_NM,
		t.LOC_CD ,
		t.STOCK_AMT,t.FAULT_AMT,
		t.reg_dt,t.del_yn,
		NVL(r.ALLO_AMT, 0) ALLO_AMT
		FROM TMSTK T
		LEFT JOIN RELS_S r ON r.ITEM_CD = t.ITEM_CD
		LEFT JOIN WACTR w ON w.WACTR_CD = t.WACTR_CD
		LEFT JOIN CLNT c ON c.CLNT_CD = t.CLNT_CD
		LEFT JOIN ITEM i ON i.ITEM_CD = t.ITEM_CD
		where T.del_yn = 'N'
		<if test='search_tmstk_wactrNm != ""'>
			and w.WACTR_NM like '%'||#{search_tmstk_wactrNm}||'%'
		</if>
		<if test='search_tmstk_itemNm != ""'>
			and i.ITEM_NM like '%'||#{search_tmstk_itemNm}||'%'
		</if>
		<if test='search_tmstk_clntNm != ""'>
			and c.CLNT_NM like '%'||#{search_tmstk_clntNm}||'%'
		</if>
		<if test='search_tmstk_locCd != ""'>
			and t.LOC_CD like '%'||#{search_tmstk_locCd}||'%'
		</if>
		ORDER BY t.reg_dt DESC
	</select>



	<!--stkadj 내역 검색조회-->
	<select id="search_stkadjList" resultType="org.warehouse.models.stock.StkadjForm" parameterType="String">
		SELECT
		i.ITEM_NM,
		c.CLNT_NM,
		w.WACTR_NM,
		NVL(r.ALLO_AMT, 0) ALLO_AMT,
		s.*
		FROM stkadj s
		LEFT JOIN RELS_S r ON r.ITEM_CD = s.ITEM_CD
		LEFT JOIN WACTR w ON w.WACTR_CD = s.WACTR_CD
		LEFT JOIN CLNT c ON c.CLNT_CD = s.CLNT_CD
		LEFT JOIN ITEM i ON i.ITEM_CD = s.ITEM_CD
		where s.del_yn = 'N'
		<if test='search_tmstk_wactrNm != ""'>
			and w.WACTR_NM like '%'||#{search_tmstk_wactrNm}||'%'
		</if>
		<if test='search_tmstk_itemNm != ""'>
			and i.ITEM_NM like '%'||#{search_tmstk_itemNm}||'%'
		</if>
		<if test='search_tmstk_clntNm != ""'>
			and c.CLNT_NM like '%'||#{search_tmstk_clntNm}||'%'
		</if>
		<if test='search_tmstk_locCd != ""'>
			and s.LOC_CD like '%'||#{search_tmstk_locCd}||'%'
		</if>
		<if test='mod_dt_start != "" and mod_dt_end != "" '>
			and s.adj_dt BETWEEN TO_DATE(#{mod_dt_start}, 'YYYY-MM-DD') AND TO_DATE(#{mod_dt_end}, 'YYYY-MM-DD') + 1
		</if>
		ORDER BY s.adj_dt desc
	</select>


	<!--재고 조정하기위해 tmstk 하나 가져오기-->
	<select id="stkadjOne" parameterType="HashMap" resultType="org.warehouse.models.stock.StkadjForm">
		SELECT
		t.ITEM_CD, i.ITEM_NM,
		t.CLNT_CD , c.CLNT_NM,
		t.WACTR_CD , w.WACTR_NM,
		t.LOC_CD ,
		t.STOCK_AMT,t.FAULT_AMT,
		NVL(r.ALLO_AMT, 0) ALLO_AMT
		FROM TMSTK T
		LEFT JOIN RELS_S r ON r.ITEM_CD = t.ITEM_CD
		LEFT JOIN WACTR w ON w.WACTR_CD = t.WACTR_CD
		LEFT JOIN CLNT c ON c.CLNT_CD = t.CLNT_CD
		LEFT JOIN ITEM i ON i.ITEM_CD = t.ITEM_CD
		where t.clnt_cd = #{clnt_cd}
		and t.item_cd = #{item_cd}
		and t.wactr_cd = #{wactr_cd}
		and t.loc_cd = #{loc_cd}
	</select>


	<!--재고조정 테이블 저장-->
	<insert id="insertStkadj" parameterType="org.warehouse.models.stock.StkadjForm">
		insert into stkadj values (
		sysdate,
		(SELECT COUNT(*) FROM stkadj s WHERE TO_CHAR(s.ADJ_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))+1,
		#{clnt_cd},
		#{item_cd},
		#{wactr_cd},
		#{loc_cd},
		#{before_adj_stock},
		#{after_adj_stock},
		#{adj_reason},
		'',
		'',
		'',
		sysdate,
		#{mod_nm},
		'N'
		)
	</insert>
	<!--시점재고 수량 업데이트-->
	<update id="updateTmstk" parameterType="org.warehouse.models.stock.StkadjForm">
		update tmstk set
		stock_amt = stock_amt + #{modTmstkStockAmt} + #{modTmstkFaultAmt},
		fault_amt = fault_amt + #{modTmstkFaultAmt},
		mod_dt = sysdate,
		mod_nm = #{mod_nm}
		where
		loc_cd = #{loc_cd} and
		wactr_cd = #{wactr_cd} and
		clnt_cd = #{clnt_cd} and
		item_cd = #{item_cd}
	</update>
	<!--	stkadj E	-->

	<!--	stktransf S		-->
	<insert id="insertStktransf" parameterType="org.warehouse.models.stock.StktransfVO">
		INSERT INTO STKTRANSF F(F.MOVE_DT, F.NO, F.ITEM_CD, F.CLNT_CD, F.WACTR_CD_FROM, F.LOC_CD_FROM, F.WACTR_CD_TO, F.LOC_CD_TO, F.RUNTIME_STOCK, F.MOVE_AMT, F.REASON, F.REG_DT, F.REG_NM)
		VALUES(TO_CHAR(SYSDATE, 'YYYY-MM-DD'),(SELECT COUNT(*) FROM STKTRANSF FF WHERE FF.MOVE_DT = TO_CHAR(SYSDATE, 'YYYY-MM-DD'))+1, #{itemCd}, #{clntCd}, #{waCtrCdFrom}, #{locCdFrom}, #{waCtrCdTo}, #{locCdTo}, #{runtimeStock}, #{moveAmt}, #{reason}, TO_CHAR(SYSDATE, 'YYYY-MM-DD'), #{regNm})

	</insert>

	<select id="getStktransfList" resultMap="stktransfMap">
		SELECT F.*, I.ITEM_NM FROM STKTRANSF F
			LEFT OUTER JOIN ITEM I ON F.ITEM_CD = I.ITEM_CD
		WHERE F.DEL_YN = 'N'
		ORDER BY F.MOVE_DT ASC, F.NO ASC
	</select>

	<select id="searchTransf" resultMap="stktransfMap">
		SELECT F.*, I.ITEM_NM FROM STKTRANSF F
		LEFT OUTER JOIN ITEM I ON F.ITEM_CD = I.ITEM_CD
		<where>
			<if test="search_moveDt != null">
				F.MOVE_DT = #{search_moveDt}
			</if>
			<if test="search_itemCd != ''">
				AND I.ITEM_CD LIKE '%'||#{search_itemCd}||'%'
			</if>
			<if test="search_itemNm != ''">
				AND I.ITEM_NM LIKE '%'||#{search_itemNm}||'%'
			</if>
			AND F.DEL_YN = 'N'
		</where>
		ORDER BY F.MOVE_DT ASC, F.NO ASC
	</select>
	<!--	stktransf E		-->

	<!-- 출고할당관련 S -->
	<select id="stockChk" resultMap="stock2Map">
		SELECT A.ITEM_CD
		, A.CLNT_CD
		, A.LOC_CD
		, A.WACTR_CD
		, A.STOCK_AMT
		, A.FAULT_AMT
		FROM TMSTK A
		LEFT OUTER JOIN RELS_S B
		ON  A.ITEM_CD = B.ITEM_CD
		AND A.CLNT_CD = B.CLNT_CD
		AND A.LOC_CD = B.LOC_CD
		WHERE A.ITEM_CD = #{item_cd}
		AND A.CLNT_CD = #{clnt_cd}
		AND A.STOCK_AMT > 0
		AND A.STOCK_AMT - NVL(B.ALLO_AMT, 0) != 0
		AND (NVL(B.ALLO_AFTER_STOCK, 0) > 0 OR B.ITEM_CD IS NULL)
		AND ROWNUM = 1
	</select>

	<!-- 출고할당관련 E -->
</mapper>